// Generated by Dagger (https://dagger.dev).
package com.egifix.madarlogin.presenter.module;

import android.content.Context;
import com.egifix.madarlogin.data.db.database.AppDatabase;
import dagger.internal.DaggerGenerated;
import dagger.internal.Factory;
import dagger.internal.Preconditions;
import javax.inject.Provider;

@DaggerGenerated
@SuppressWarnings({
    "unchecked",
    "rawtypes"
})
public final class CacheModule_ProvideBlogDbFactory implements Factory<AppDatabase> {
  private final Provider<Context> contextProvider;

  public CacheModule_ProvideBlogDbFactory(Provider<Context> contextProvider) {
    this.contextProvider = contextProvider;
  }

  @Override
  public AppDatabase get() {
    return provideBlogDb(contextProvider.get());
  }

  public static CacheModule_ProvideBlogDbFactory create(Provider<Context> contextProvider) {
    return new CacheModule_ProvideBlogDbFactory(contextProvider);
  }

  public static AppDatabase provideBlogDb(Context context) {
    return Preconditions.checkNotNullFromProvides(CacheModule.INSTANCE.provideBlogDb(context));
  }
}
