// Generated by Dagger (https://dagger.dev).
package com.egifix.madarlogin.presenter.ui.main;

import com.egifix.madarlogin.domain.useCase.getUsersUseCase;
import dagger.internal.DaggerGenerated;
import dagger.internal.Factory;
import javax.inject.Provider;

@DaggerGenerated
@SuppressWarnings({
    "unchecked",
    "rawtypes"
})
public final class MainViewModel_Factory implements Factory<MainViewModel> {
  private final Provider<getUsersUseCase> getUsersUseCaseProvider;

  public MainViewModel_Factory(Provider<getUsersUseCase> getUsersUseCaseProvider) {
    this.getUsersUseCaseProvider = getUsersUseCaseProvider;
  }

  @Override
  public MainViewModel get() {
    return newInstance(getUsersUseCaseProvider.get());
  }

  public static MainViewModel_Factory create(Provider<getUsersUseCase> getUsersUseCaseProvider) {
    return new MainViewModel_Factory(getUsersUseCaseProvider);
  }

  public static MainViewModel newInstance(getUsersUseCase getUsersUseCase) {
    return new MainViewModel(getUsersUseCase);
  }
}
