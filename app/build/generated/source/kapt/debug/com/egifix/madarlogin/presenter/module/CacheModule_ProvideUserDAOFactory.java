// Generated by Dagger (https://dagger.dev).
package com.egifix.madarlogin.presenter.module;

import com.egifix.madarlogin.data.db.dao.UserDao;
import com.egifix.madarlogin.data.db.database.AppDatabase;
import dagger.internal.DaggerGenerated;
import dagger.internal.Factory;
import dagger.internal.Preconditions;
import javax.inject.Provider;

@DaggerGenerated
@SuppressWarnings({
    "unchecked",
    "rawtypes"
})
public final class CacheModule_ProvideUserDAOFactory implements Factory<UserDao> {
  private final Provider<AppDatabase> roomDatabaseProvider;

  public CacheModule_ProvideUserDAOFactory(Provider<AppDatabase> roomDatabaseProvider) {
    this.roomDatabaseProvider = roomDatabaseProvider;
  }

  @Override
  public UserDao get() {
    return provideUserDAO(roomDatabaseProvider.get());
  }

  public static CacheModule_ProvideUserDAOFactory create(
      Provider<AppDatabase> roomDatabaseProvider) {
    return new CacheModule_ProvideUserDAOFactory(roomDatabaseProvider);
  }

  public static UserDao provideUserDAO(AppDatabase roomDatabase) {
    return Preconditions.checkNotNullFromProvides(CacheModule.INSTANCE.provideUserDAO(roomDatabase));
  }
}
